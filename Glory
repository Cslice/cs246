import javafx.application.Application;
import javafx.stage.Stage;
import javafx.scene.Scene;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.geometry.Pos;
import javafx.geometry.Insets;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.scene.control.Label;
import javafx.scene.control.ListView;
import javafx.scene.layout.ColumnConstraints;

public class Glory extends Application {
    Label enterRunnable; 
    Label runnables;
    Label runningThreads;
    TextField textField;
    Button start;
    Button stop;
    ListView<String> runnablesList; 
    ListView<String> runningThreadList; 
    
    /**     
     * Default Constructor
     * Input: None
     * Desc: Initializes member variables
     * Output: 
     * Return: None
     */
    public Glory() {
        enterRunnable = new Label("Enter Runnable:");
        runnables = new Label("Runnables");
        runningThreads = new Label("Runnables"); 
        
        textField = new TextField();
        textField.setPrefSize(250, 20);
        
        start = new Button("Start");
        stop = new Button("Stop");
        
        runnablesList = new ListView<String>();
	runnablesList.setPrefWidth(150);
	runnablesList.setPrefHeight(300);
        
        runningThreadList = new ListView<String>();
	runningThreadList.setPrefWidth(150);
	runningThreadList.setPrefHeight(300);     
    }
    
    
    /** 
     * Input: 
     * Desc:
     * Output:
     * Return:
     */
    @Override 
    public void start(Stage stage) {
        setUpScreen(stage);
        
        setActions();
        
    }
    
    /** 
     * Input: 
     * Desc:
     * Output:
     * Return:
     */
    public void setActions() {
        textField.setOnAction();
        
    }
    
    /** 
     * Input: 
     * Desc:
     * Output:
     * Return:
     */
    public void setUpScreen(Stage stage) {
        BorderPane borderPane = new BorderPane();
       
        // Adds Hbox with enter runnable label and text field
        HBox hBox = new HBox(20);
        hBox.setPadding(new Insets(25, 25, 25, 25));
        hBox.getChildren().addAll(enterRunnable, textField);
        borderPane.setTop(hBox);
        
        // Add Vbox to left of borderPane with label, button, and list
        VBox vBox1 = new VBox(10);
        vBox1.setPadding(new Insets(10, 10, 10, 40));
        vBox1.getChildren().addAll(runnables, runnablesList, start);
        vBox1.setAlignment(Pos.CENTER);
        borderPane.setLeft(vBox1);
       
        // Add Vbox to right of borderPane with label, button, and list
        VBox vBox2 = new VBox(10);
        vBox2.setPadding(new Insets(10, 40, 10, 10));
        vBox2.getChildren().addAll(runningThreads, runningThreadList, stop);
        vBox2.setAlignment(Pos.CENTER);
        borderPane.setRight(vBox2); 
          

	Scene scene = new Scene(borderPane, 450, 500);
	stage.setTitle("Threads of Gloy");
	stage.setScene(scene);
	stage.show();
        
        
    }
        
    /** 
     * Input: 
     * Desc:
     * Output:
     * Return:
     */
    public static void main(String[] args) {
	launch(args);
    }
}
